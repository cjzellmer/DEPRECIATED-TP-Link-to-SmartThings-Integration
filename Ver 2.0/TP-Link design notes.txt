Design notes:
	a.  Bulb API.  The bulb's API has some limits in setting the
	    'transition_light_state'.
    		1.	You can not combine the ON command with other parameters (except 
        		'transition_time').  If this is attempted, the bulb will turn-on
           	and the remainder of the command will be ignored.
        	2.	Going to Circadian mode will automatically turn on the bulb.
        	3.	Turning the bulb off while in Circadian mode will automatically
        		transition the bulb to Normal mode.
        	4.	To set Color, three parameters must be sent: 'hue', 'saturation'
        		and 'color_temp'.  'color_temp' must be zero.
        	5.	The bulb automatically sends a state message when sending a command.
        		The format of this message changes based on the bulb being on or off.
	b.	Switch/Plug API.  The switch/plug returns an abbreviate state message
		with only the error state after the on/off command is set.
	c.	SmartThings command notes
    		1.	Bulb.  On/Off command.  When turning the bulb on or off, the color 				will change to yellow after sending the command and until the state
			is updated.
    		2.	Bulb.  On setting brightness, color_temperature, or color, this DH
			will automatically turn the bulb on first followed by the command.
			The return from the ON command is not parsed.
        	3.	Bulb.  For brightness, color_temperature, and color, the if statement
			is designed to avoid command collisions causing errors.
        	4.	Bulb.  Refresh requests the current state of the bulb.  The return
			message is different format than that for other commands.
        	5.	Bulb.  'transition_time' (for on, brightness, color_temp, and color)
			is not implemented in this DH and is '0'.
		6.	Plug/Switch.  Power command sequence is SEND COMMAND => RECEIVE
			RESPONSE => SEND REFRESH => RECEIVE/PARSE RESPONSE => UPDATE STATE.
        	7.	All.  The HTTP message headers are used to send the bulb's IP address
			and command to the Server/Bridge.
		8.	All.  Energy Monitor functions are not implemented.
        	9.	This DH is designed as a state slave to the devices.  When sending a
        		command to the bulb, the DH state for the bulb is not updated until
            	parsed from the return string.
